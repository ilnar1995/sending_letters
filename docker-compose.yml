version: "3.8"

services:
  db_project:
    image: postgres:11-alpine
    container_name: db_project
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    ports:
      - 5435:5432
    environment:
      POSTGRES_PASSWORD: 123456
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
  web:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    container_name: django
    command:  bash -c "python /usr/src/django_project/manage.py runserver 0.0.0.0:8000"
    entrypoint: /usr/src/django_project/docker/entrypoint.sh
    volumes:
      - .:/usr/src/django_project/
    env_file:
      - .env.dev
    ports:
      - 8000:8000
    depends_on:
      - db_project
  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
  celery:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    entrypoint: /usr/src/django_project/docker/entrypoint-celery.sh
    command: celery -A django_project worker -l info
    volumes:
      - .:/usr/src/django_project/
    depends_on:
      - db_project
      - redis
    env_file:
      - .env.dev
  flower:
    image: mher/flower
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - FLOWER_PORT=5555
    ports:
      - 5555:5555
#  celery-beat:
#    build:
#      context: .
#      dockerfile: ./docker/Dockerfile
#    entrypoint: /usr/src/django_project/docker/entrypoint-celery.sh
#    command: celery -A django_project beat -l info
#    volumes:
#      - .:/usr/src/django_project/
#    depends_on:
#      - db_project
#      - redis
#    env_file:
#      - .env.dev

volumes:
  postgres-data: